

====================================

DROP TABLE OM_STUDENT

CREATE TABLE OM_STUDENT
(SID VARCHAR(10),
SNAME VARCHAR(30),
Gender varchar(2),
CITY VARCHAR (15),
DOB DATE,
CID varchar(20),
SCORE INT)

SELECT * FROM OM_STUDENT

INSERT INTO OM_STUDENT VALUES

('S01','RAM THAPA','M','IRVING','1/23/1982','MATH1314',79),
('S02','SUMAN KARKI','M','EULESS','10/12/1970','MATH2305',99),
('S03','SUBASH KARKI','M','ARLINGTON','6/25/1985','POFT1301',45),
('S04','ANJILA SHRESTHA','F','IRVING','1/26/1988','ARTS1301',78),
('S05','JOYA SHARMA','F','IRVING','5/8/1962','MATH1314',89),
('S06','BABA SHARMA','F','IRVING','1/28/1982','MATH2305',90),
('S07','YUNISH RAI','M','ARLINGTON','2/21/1975','POFT1301',95),
('S08','BOBBY MAHARAJAN','F','ARLINGTON','2/22/1976','ARTS1301',34),
('S09','KAMAL THAPA','M','EULESS','12/23/1977','PHYS1401',67),
('S10','RUSS KARKI','M','EULESS','4/9/1981','BIOL1322',66),
('S11','BINAYA BASNET','M','ARLINGTON','12/10/1981','MATH1314',89),
('S12','SUJAN SHRESTHA','M','EULESS','4/11/1972','MATH2305',92),
('S13','KRISHNA SHRESTHA','M','IRVING','7/23/1984','POFT1301',56),
('S14','ANISH SHARMA','M','IRVING','3/5/1982','ARTS1301',67),
('S15','ASHISH MAHARAJAN','M','IRVING','11/6/1982','PHYS1401',70),
('S16','PRIYANKA KARKI','F','EULESS','2/7/1980','MATH1314',45),
('S17','ANGEL SHAH','F','EULESS','9/8/1980','MATH2305',84),
('S18','ERIKA SHAH','F','EULESS','7/21/1982','POFT1301',78),
('S19','SUMEET SHAH','M','ARLINGTON','7/22/1969','ARTS1301',44),
('S20','RABI MAHARAJAN','M','EULESS	','7/23/1979','PHYS1401',63),
('S21','SHRISTI MAHARAJAN','F','ARLINGTON','5/24/1970','BIOL1322',12),
('S22','DILIP MAHARAJAN	','M','EULESS','7/25/1975','HIST1301',90),
('S23','BINA SHAH','F','ARLINGTON','2/14/1976','GOVT2304',78),
('S24','REEMA RAI','F','EULESS','8/15/1971','MATH1314',45),
('S25','VIJAYA RAI','M','IRVING','6/25/1985','MATH2305',78),
('S26','AMBIKA PUN','F','EULESS','1/26/1988	','POFT1301',93),
('S27','BHUBAN RAI','M','IRVING','5/8/1962','ARTS1301',55),
('S28','SANGITA SHRESTHA','F','IRVING','1/28/1982','PHYS1401',62),
('S29','TONY SMITH','M','IRVING','2/21/1975','BIOL1322',34),
('S30','JEENA PUN','F','IRVING','2/22/1976','HIST1301',77)
===========================================================

DROP TABLE OM_COURSE

CREATE TABLE OM_COURSE
(CID VARCHAR (10),
CNAME VARCHAR (40),
FEE FLOAT,
DURATION_MONTH INT)
			
INSERT INTO OM_COURSE VALUES
('MATH1314','COLLEGE ALGEBRA',1356.3,5),
('MATH2305','DISCRETE MATHEMATICS',2345.56,6),
('POFT1301','BUSINESS ENGLISH',450.4,4),
('ARTS1301','ART APPRECIATION',670,5),
('PHYS1401','COLLEGE PHYSICS I',800.12,5),
('BIOL1322','NUTRITION AND DIET THERAPHY',4500.6,8),
('HIST1301','UNITED STATES HISTORY I',23.45,1),
('GOVT2304','INTRODUCTION TO POLITICAL SCIENCE',456.9,2)



===============================


DROP TABLE OM_TEACHER

CREATE TABLE OM_TEACHER 
(TID VARCHAR (4),
TNAME VARCHAR (40),
JOB_START_DT DATE,
COURSE_START_DT DATE,
CID VARCHAR (10))

INSERT INTO OM_TEACHER VALUES
('T01','REEMA RAI','12/10/1981'	,'5/15/2018'	,'MATH1314'		),
('T02','WINSON RANA','4/11/1972'	,'5/16/2018'	,'MATH2305'		),
('T03','SABIN GAUTAM'	,'7/23/1984'	,'5/20/2018'	,'POFT1301'		),
('T04','KAMAL SATYAL'	,'3/5/1982'	,'5/24/2018'	,'ARTS1301'		),
('T05','RABINDRA NATH TEGOR'	,'11/6/1982'	,'5/28/2018','PHYS1401'		),
('T06','JACKY CHANG','2/7/1980'	,'6/1/2018'	,'BIOL1322'		),
('T07','PETER GURUNG'	,'9/8/1980'	,'6/5/2018'	,'HIST1301'		),
('T08','TIKA GURUNG'	,'7/21/1982'	,'6/9/2018'	,'GOVT2304'),
('T09','DILIP SHRESTHA'	,'4/11/1972'	,'5/15/2018'	,'MATH1314'),
('T10','BISHNU PARAJULI'	,'7/23/1984'	,'5/16/2018'	,'MATH2305'),
('T11','KRIPASH SHRESTHA'	,'3/5/1982'	,'5/20/2018'	,'POFT1301'),
('T12','SURESH SHRESTHA'	,'11/6/1982'	,'5/24/2018'	,'ARTS1301'),
('T13','ASHOK GAUTAM','2/7/1980','5/28/2018','PHYS1401'),
('T14','SRIJANA SHRESTHA','	8/15/1971'	,'6/1/2018'	,'BIOL1322'		),
('T15','ANJULA GURUNG','	6/25/1985'	,'6/5/2018'	,'HIST1301'		),
('T16','SANJEEV RAI','7/25/1975'	,'6/9/2018','GOVT2304')

SELECT * FROM OM_STUDENT

--1.DISPLAY HOW MANY ARE MALE AND HOW MANY ARE FEMALE STUDENT?

SELECT GENDER,COUNT (GENDER)AS NUMBER FROM OM_STUDENT 
GROUP BY GENDER

--2.DISPLAY STUDENTNAME, AGE OF STUDENT

SELECT SNAME, DATEDIFF(YYYY,DOB,GETDATE()) AS AGE FROM OM_STUDENT

--3.COUNT NUMBER OF STUDENT IN EACH COURSE FROM STUDENT TABLE?

SELECT CID, COUNT(CID) AS NO_OF_STUDENT FROM OM_STUDENT
GROUP BY CID
--or
select cid, count(sname) as no_of_student from OM_STUDENT group by cid

--4.COUNT NUMBER OF STUDENT BASE ON CITY?
SELECT CITY,COUNT(CITY) AS NO_OF_STUDENT FROM OM_STUDENT
GROUP BY CITY

--5.COUNT NUMBER OF STUDNET BASE ON CITY AND GENDER?
SELECT CITY,COUNT(CITY)AS NO_OF_STUDENT, GENDER, COUNT(GENDER) AS NO_OF_STUDENT 
FROM OM_STUDENT
GROUP BY CITY, GENDER
ORDER BY CITY, GENDER

--6.DISPLAY HIGHEST SCORER IN EACH COURSE?
select CID, MAX(SCORE) from om_student 
GROUP BY CID

--7.DISPLAY STUDNETNAME, AND COURSE THEY HAVE TAKEN?
SELECT S.SNAME STUDENT_NAME,C.CNAME COURSE FROM OM_STUDENT S JOIN OM_COURSE C
ON S.CID=C.CID

---8.DISPLAY NAME OF TEACHER WHO HAVE TOUGHT MORE THAN 40 YEARS
SELECT * FROM OM_TEACHER WHERE DATEDIFF(YYYY,JOB_START_DT,GETDATE())>40

select tname, DATEDIFF(YYYY,JOB_START_DT,GETDATE()) as Tought_year FROM OM_TEACHER

select * from OM_TEACHER
-- to get output for how long time they taught-  SELECT DATEDIFF(YYYY,JOB_START_DT,GETDATE()) FROM OM_TEACHER

--9.DISPLAY DAY (SUNDAY, MONDAY...) STUDENT WERE BORN
SELECT SNAME, DATENAME(DW,DOB) DAY FROM OM_STUDENT

--10	DISPLAY THOSE NAME WHOSE STUDENT AND TEACHER NAME IS SAME
SELECT S.SNAME FROM OM_STUDENT S JOIN OM_TEACHER T
ON S.CID=T.CID
WHERE S.SNAME=T.TNAME

--11	DISPLAY LIST OF STUDENT NAME WHO HAVE TAKEN CLASS UNDERT WHICH TEACHER
SELECT S.SNAME,T.TNAME FROM OM_TEACHER T JOIN OM_STUDENT S
ON T.CID=S.CID


--12	DISPLAY NAME OF STUDENT WHO HAVE TAKEN COURSE DURATION_MONTH GREATER THAN 5 MONTH.

SELECT S.SNAME, C.DURATION_MONTH FROM OM_STUDENT S JOIN OM_COURSE C
ON S.CID=C.CID
WHERE DURATION_MONTH>5

CREATE VIEW VW_MONTHS
AS
SELECT S.SNAME, C.DURATION_MONTH FROM OM_STUDENT S JOIN OM_COURSE C
ON S.CID=C.CID
WHERE DURATION_MONTH>5

SELECT * FROM VW_MONTHS

INSERT INTO VW_MONTHS VALUES ('FSFSFSF',7)

UPDATE VW_MONTHS SET SNAME ='BIKRAM' WHERE SNAME='BABA SHARMA'


--13	DISPLAY NAME OF STUDENT IN THIS FORMAT (EX: RAM THAPA NEED TO DISPLAY rAM tHAPA)

SELECT 
LOWER(LEFT(SNAME,1))+UPPER(SUBSTRING(SNAME,2,PATINDEX('% %',SNAME)-1))+
LOWER(SUBSTRING(SNAME,PATINDEX('% %',SNAME),2))+ 
UPPER(SUBSTRING(SNAME,PATINDEX('% %',SNAME)+2,LEN(SNAME)-PATINDEX('% %',SNAME)))
 FROM OM_STUDENT

 --14	DISPLAY NUMBER OF STUDENT BASE ON LASTNAME 

 SELECT SUBSTRING(SNAME,PATINDEX('% %',SNAME)+1,LEN(SNAME)-PATINDEX('% %',SNAME)) LASTNAME 
 FROM OM_STUDENT

--- 15	DISPLAY NAME OF STUDENT WHOSE FIRSTNAME AND LASTNAME START WITH "S"


SELECT SNAME FROM OM_STUDENT WHERE LEFT(SNAME,1) LIKE 'S%'and
 
SUBSTRING(SNAME,PATINDEX('% %',SNAME)+1,LEN(SNAME)-PATINDEX('% %',SNAME))
LIKE 'S%'

---16	DISPLAY OLDEST STUDENT IN EACH COURSE

SELECT CID, MAX(DOB) FROM OM_STUDENT
GROUP BY CID

 ---17	DISPLAY 3rd AND 7th OLDEST TEACHER 

SELECT * FROM OM_TEACHER A WHERE 2 = (SELECT COUNT(DISTINCT(JOB_START_DT)) FROM OM_TEACHER B WHERE 
A.JOB_START_DT > B.JOB_START_DT) 
UNION
SELECT * FROM OM_TEACHER A WHERE 6  = (SELECT COUNT(DISTINCT(JOB_START_DT)) FROM OM_TEACHER B WHERE 
A.JOB_START_DT > B.JOB_START_DT) 

DROP VIEW TEST_INSERT_DEL

CREATE VIEW VW_TEST_INSERT_DEL
AS
	SELECT * FROM OM_TEACHER A WHERE 2= (SELECT COUNT(DISTINCT(JOB_START_DT)) FROM OM_TEACHER B WHERE 
	A.JOB_START_DT>B.JOB_START_DT)
	UNION
	SELECT * FROM OM_TEACHER A WHERE 6= (SELECT COUNT(DISTINCT(JOB_START_DT)) FROM OM_TEACHER B WHERE 
	A.JOB_START_DT>B.JOB_START_DT)

SELECT * FROM VW_TEST_INSERT_DEL
INSERT INTO VW_TEST_INSERT_DEL VALUES ('T05','RABINDRA','NATH TEGOR','1982-11-06','2018-05-28','PHYS1401')

---18	DISPLAY MOST EXPENSIVE AND MOST CHEAP COURSE

SELECT * FROM OM_COURSE WHERE FEE = (SELECT MAX(FEE) FROM OM_COURSE) 
UNION
SELECT * FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE) 

----19	DISPLAY LIST OF STUDNET WHO TOOK MOST EXPENSIVE COURSE

SELECT S.SNAME,C.FEE FROM OM_STUDENT S JOIN OM_COURSE C
ON  S.CID=C.CID	
WHERE FEE=(SELECT MAX(FEE) FROM OM_COURSE) 

--20	DISPLAY LIST OF STUDENT WHO GOT HIGHEST SCORE IN MOST CHEAP COURSE

---score in most cheap courses

SELECT CID FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE) --HIST1301

SELECT MAX(SCORE) FROM OM_STUDENT WHERE CID IN 
(
	SELECT CID FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE)
) 

================
SELECT TOP 1 * FROM OM_STUDENT WHERE CID IN 
(
	SELECT CID FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE)
) 	ORDER BY SCORE DESC	

 --or,

--21 DISPLAY LIST OF STUDENT WHO GOT HIGHEST SCORE IN MOST CHEAP COURSE
--to display all higest score if we have multiple highest score 

SELECT  * FROM OM_STUDENT WHERE CID IN 
(SELECT CID FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE)) 	
AND SCORE = (SELECT MAX(SCORE) FROM OM_STUDENT WHERE CID IN (SELECT CID FROM OM_COURSE 
WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE)))


select * from om_student
select * from om_course

select * from om_student where CID IN 
 
	(SELECT CID FROM OM_COURSE WHERE FEE=(SELECT MIN(FEE) FROM OM_COURSE))

	AND SCORE = (SELECT MAX(SCORE) FROM OM_STUDENT WHERE CID =
	(SELECT CID FROM OM_COURSE WHERE FEE=(SELECT MIN(FEE) FROM OM_COURSE))
	)

	----- OR----

	SELECT TOP 1 * FROM OM_STUDENT WHERE CID IN 
(
	SELECT CID FROM OM_COURSE WHERE FEE = (SELECT MIN(FEE) FROM OM_COURSE)
) 	ORDER BY SCORE DESC								
				
---21	DISPLAY TEACHER NAME AND STUDENT NAME, WHOSE LAST NAME START WITH "S"

SELECT SNAME AS NAME FROM OM_STUDENT
WHERE SUBSTRING(SNAME,PATINDEX('% %',SNAME)+1,LEN(SNAME)-PATINDEX('% %',SNAME)) LIKE 'S%'
UNION ALL
SELECT TNAME FROM OM_TEACHER
WHERE SUBSTRING(TNAME,PATINDEX('% %',TNAME)+1,LEN(TNAME)-PATINDEX('% %',TNAME)) LIKE 'S%'

---22 WRITE QUERY TO DISPLAY ALL THE COLUMN FROM STUDENT TABLE WITH NEW COLUMN DISCOUNT. 												
   ---UNDER DISCOUNT DISPLAY "10% DISCOUNT" IF STUDENT LEAVE IN CITY IRVING OR EULESS BUT MUST BE FEMALE. ELSE DISPLAY "NO DISCOUNT"												

   SELECT *, CASE 			
				 WHEN CITY IN ('IRVING','EULESS') AND GENDER='F' THEN '10% DISCOUNT'
				 ELSE
				 'NO DISCOUNT'
				 END AS DISCOUNT
				 FROM OM_STUDENT


	
	SELECT SUBSTRING(SNAME,CHARINDEX(' ',SNAME)+1,LEN(SNAME)) FROM OM_STUDENT


	SELECT PATINDEX('% %',SNAME) FROM OM_STUDENT

	
SELECT SUBSTRING('test123/abc',CHARINDEX('/','test123/abc')+1,LEN('test123/abc'))


SELECT *FROM OM_COURSE

ALTER TABLE OM_COURSE
--ALTER COLUMN CID VARCHAR (10) NOT NULL
ADD PRIMARY KEY (CID)

ALTER TABLE OM_STUDENT
--ALTER COLUMN CID VARCHAR(10)
ADD FOREIGN KEY (CID) REFERENCES OM_COURSE (CID)

ALTER TABLE OM_TEACHER
---ALTER COLUMN TID VARCHAR(4) NOT NULL
ADD PRIMARY KEY (TID)

ALTER TABLE OM_TEACHER
ADD FOREIGN KEY(CID) REFERENCES OM_COURSE (CID)



SELECT *, ROW_NUMBER () OVER (ORDER BY GENDER) AS SN FROM OM_STUDENT

															